msconvert

msconvert is a command line tool for converting between various file formats. For Windows users, the msConvertGUI program is also available for easy file conversion.

Read: open formats, vendor formats (ProteoWizard supported formats)
Write: open formats. Also, msconvert can perform various filters and transformations (listed here) on its input files.
Examples:

msconvert
(prints usage information, as seen below)
msconvert --help
(prints usage information, with more detail about filters)
msconvert data.RAW
(creates data.mzML in current directory)
msconvert data.RAW --mzXML
(creates data.mzXML in current directory)
msconvert *.RAW -o my_output_dir
(converts all files matching *.RAW to mzML, output files created in my_output_dir)
msconvert data.RAW --zlib --filter "peakPicking true [2,3]" 
(use zlib compression for binary data arrays, and use vendor centroiding for msLevels in [2,3])
msconvert data.RAW --filter "msLevel 2"
(only write ms2 scans)
msconvert data.RAW --filter "msLevel 2-"
(only write ms2 and higher scans)
msconvert data.RAW --filter "zeroSamples removeExtra"
(omit zero-valued samples that are not next to non-zero samples)
msconvert data.RAW --32 --zlib --filter "peakPicking true 1-" --filter "zeroSamples removeExtra" 
(various tricks to create a smaller file, much like the old ReAdW converter program)

Running msconvert with no arguments produces this helpful output:

Convert mass spec data file formats.

Return value: # of failed files.

Options:
  -f [ --filelist ] arg : specify text file containing filenames
  -o [ --outdir ] arg (=.) : set output directory ('-' for stdout) [.]
  -c [ --config ] arg : configuration file (optionName=value)
  --outfile arg : Override the name of output file.
  -e [ --ext ] arg : set extension for output files 
  [mzML|mzXML|mgf|txt|mz5]
  --mzML : write mzML format [default]
  --mzXML : write mzXML format
  --mz5 : write mz5 format
  --mgf : write Mascot generic format
  --text : write ProteoWizard internal text format
  --ms1 : write MS1 format
  --cms1 : write CMS1 format
  --ms2 : write MS2 format
  --cms2 : write CMS2 format
  -v [ --verbose ] : display detailed progress information
  --64 : set default binary encoding to 64-bit precision 
  [default]
  --32 : set default binary encoding to 32-bit precision
  --mz64 : encode m/z values in 64-bit precision [default]
  --mz32 : encode m/z values in 32-bit precision
  --inten64 : encode intensity values in 64-bit precision
  --inten32 : encode intensity values in 32-bit precision 
  [default]
  --noindex : do not write index
  -i [ --contactInfo ] arg : filename for contact info
  -z [ --zlib ] : use zlib compression for binary data
  --numpressLinear toler : use numpress linear prediction lossy compression for binary mz and rt data (relative error guaranteed less than given tolerance) 
  --numpressPic : use numpress positive integer lossy compression for binary intensities (maximum 0.5 absolute error guaranteed)
  --numpressSlof toler : use numpress short logged float lossy compression for binary intensities (relative error guaranteed less than given tolerance)
  -n [ --numpressAll] : same as --numpressLinear --numpressSlof (see https://github.com/fickludd/ms-numpress for more info)
  -g [ --gzip ] : gzip entire output file (adds .gz to filename)
  --filter arg : add a spectrum list filter
  --merge : create a single output file from multiple input 
  files by merging file-level metadata and 
  concatenating spectrum lists
  --simAsSpectra : write selected ion monitoring as spectra, not 
  chromatograms
  --srmAsSpectra : write selected reaction monitoring as spectra, not
  chromatograms
  --help : show this message, with extra detail on filter 
  options

FILTER OPTIONS
run this command with --help to see more detail
index <index_value_set>
msLevel <mslevels>
chargeState <charge_states>
precursorRecalculation 
precursorRefine 
peakPicking <prefer_vendor> <ms_levels>
scanNumber <scan_numbers>
scanEvent <scan_event_set>
scanTime <scan_time_range>
sortByScanTime 
stripIT 
metadataFixer 
titleMaker <format_string>
threshold <type> <threshold> <orientation> [<mslevels>]
mzWindow <mzrange>
mzPrecursors <precursor_mz_list>
defaultArrayLength <peak_count_range>
zeroSamples <mode> [<MS_levels>]
mzPresent <tolerance> <type> <threshold> <orientation> <mz_list> [<include_or_exclude>]
MS2Denoise [<peaks_in_window> [<window_width_Da> [multicharge_fragment_relaxation]]]
MS2Deisotope [<hi_res> [<mz_tolerance>]]
ETDFilter [<removePrecursor> [<removeChargeReduced> [<removeNeutralLoss> [<blanketRemoval> [<matchingTolerance> ]]]]]
chargeStatePredictor [<overrideExistingCharge> [<maxMultipleCharge> [<minMultipleCharge> [<singleChargeFractionTIC> [<algorithmMakeMS2>]]]]]
activation <precursor_activation_type>
analyzer <analyzer>
analyzerType <analyzer>
polarity <polarity>


Examples:

# convert data.RAW to data.mzML
msconvert data.RAW

# convert data.RAW to data.mzXML
msconvert data.RAW --mzXML

# put output file in my_output_dir
msconvert data.RAW -o my_output_dir

# extract scan indices 5...10 and 20...25
msconvert data.RAW --filter "index [5,10] [20,25]"

# extract MS1 scans only
msconvert data.RAW --filter "msLevel 1"

# extract MS2 and MS3 scans only
msconvert data.RAW --filter "msLevel 2-3"

# extract MSn scans for n>1
msconvert data.RAW --filter "msLevel 2-"

# apply ETD precursor mass filter
msconvert data.RAW --filter ETDFilter

# remove non-flanking zero value samples
msconvert data.RAW --filter "zeroSamples removeExtra"

# remove non-flanking zero value samples in MS2 and MS3 only
msconvert data.RAW --filter "zeroSamples removeExtra 2 3"

# add missing zero value samples (with 5 flanking zeros) in MS2 and MS3 only
msconvert data.RAW --filter "zeroSamples addMissing=5 2 3"

# keep only HCD spectra from a decision tree data file
msconvert data.RAW --filter "activation HCD"

# keep the top 42 peaks or samples (depending on whether spectra are centroid or profile):
msconvert data.RAW --filter "threshold count 42 most-intense"

# multiple filters: select scan numbers and recalculate precursors
msconvert data.RAW --filter "scanNumber [500,1000]" --filter "precursorRecalculation"

# multiple filters: apply peak picking and then keep the bottom 100 peaks:
msconvert data.RAW --filter "peakPicking true 1-" --filter "threshold count 100 least-intense"

# multiple filters: apply peak picking and then keep all peaks that are at least 50% of the intensity of the base peak:
msconvert data.RAW --filter "peakPicking true 1-" --filter "threshold bpi-relative .5 most-intense"

# use a configuration file
msconvert data.RAW -c config.txt

# example configuration file
mzXML=true
zlib=true
filter="index [3,7]"
filter="precursorRecalculation"


Questions, comments, and bug reports:
http://proteowizard.sourceforge.net
support@proteowizard.org

ProteoWizard release: 3.0.4445 (2013-3-26)
ProteoWizard MSData: 3.0.4337 (2013-2-11)
ProteoWizard Analysis: 3.0.4445 (2013-3-26)
Build date: Mar 27 2013 09:06:47

